Tip: Use Java 8, and run with appletviewer program.html
BorderTest.java
import java.applet.Applet;
import java.awt.*;
public class BorderTest extends Applet {
private Button left, right, top, bottom, center;
public void init() {
setLayout(new BorderLayout(5,5));
left = new Button("Left");
right = new Button("Right");
top = new Button("Top");
bottom = new Button("Bottom");
center = new Button("Center");
add("North", top);
add("South", bottom);
add("East", right);
add("West", left);
add("Center", center);
}
public Insets insets() {
return new Insets(40,40,40,40);
}
}
BorderTest.html
<html>
<body>
<applet code="BorderTest.class" width="300" height="300">
</applet>
</body>
</html>
OUTPUT:
Program 2:
calculator.java
import java.awt.*;
import java.awt.event.*;
public class calculator extends java.applet.Applet implements
ActionListener {
TextField txtTotal = new TextField("");
Button button[] = new Button[10];
Button divide = new Button("/");
Button mult = new Button("*");
Button plus = new Button ("+");
Button minus = new Button("-");
Button isequalto = new Button("=");
Button clear = new Button("CA");
double num ,numtemp ;
int counter;
String strnum = "",strnumtemp = "" ;
String op = "";
public void operation() {
counter ++;
if (counter == 1) {
numtemp = num;
strnum = "";
num = 0;
}else{
if (op == "+") numtemp += num;
else if (op == "-") numtemp -= num;
else if (op == "*") numtemp = numtemp * num;
else if (op == "/") numtemp = numtemp / num;
strnumtemp = Double.toString(numtemp);
txtTotal.setText(strnumtemp);
strnum = "";
num = 0;
}
}
public void init() {
setLayout(null);
plus.setBackground(Color.blue);
plus.setForeground(Color.white);
minus.setBackground(Color.blue);
minus.setForeground(Color.white);
divide.setBackground(Color.blue);
divide.setForeground(Color.white);
isequalto.setBackground(Color.blue);
isequalto.setForeground(Color.white);
mult.setBackground(Color.blue);
mult.setForeground(Color.white);
clear.setBackground(Color.blue);
clear.setForeground(Color.red);
for(int i = 0;i <= 9; i ++) {
button[i] = new Button(String.valueOf(i));
button[i].setBackground(Color.orange);
button[i].setForeground(Color.blue);
}
button[1].setBounds(0,53,67,53);
button[2].setBounds(67,53,67,53);
button[3].setBounds(134,53,67,53);
button[4].setBounds(0,106,67,53);
button[5].setBounds(67,106,67,53);
button[6].setBounds(134,106,67,53);
button[7].setBounds(0,159,67,53);
button[8].setBounds(67,159,67,53);
button[9].setBounds(134,159,67,53);
for (int i = 1;i <= 9; i ++) {
add(button[i]);
}
txtTotal.setBounds(0,0,200,53);
add(txtTotal);
plus.setBounds(0,212,67,53);
add(plus);
button[0].setBounds(67,212,67,53);
add(button[0]);
minus.setBounds(134,212,67,53);
add(minus);
divide.setBounds(134,264,67,53);
add(divide);
isequalto.setBounds(67,264,67,53);
add(isequalto);
mult.setBounds(0,264,67,53);
add(mult);
add(clear);
}
public void start() {
for(int i = 0;i <= 9; i ++) {
button[i].addActionListener(this);
}
plus.addActionListener(this);
minus.addActionListener(this);
divide.addActionListener(this);
mult.addActionListener(this);
isequalto.addActionListener(this);
clear.addActionListener(this);
}
public void stop() {
for(int i = 0;i <= 9; i ++) {
button[i].addActionListener(null);
}
plus.addActionListener(null);
minus.addActionListener(null);
divide.addActionListener(null);
mult.addActionListener(null);
isequalto.addActionListener(null);
clear.addActionListener(null);
}
public void actionPerformed(ActionEvent e) {
for(int i = 0;i <= 9; i++) {
if (e.getSource() == button[i]) {
play(getCodeBase(),i + ".au");
strnum += Integer.toString(i);
txtTotal.setText(strnum);
num = Double.valueOf(strnum).doubleValue();
}
}
if (e.getSource() == plus) {
operation();
op = "+";
}
if (e.getSource() == minus) {
operation();
op = "-";
}
if (e.getSource() == divide) {
operation();
op = "/";
}
if (e.getSource() == mult) {
operation();
op = "*";
}
if (e.getSource() == isequalto) {
if (op == "+") numtemp += num;
else if (op == "-") numtemp -= num;
else if (op == "*") numtemp = numtemp * num;
else if (op == "/") numtemp = numtemp / num;
strnumtemp = Double.toString(numtemp);
txtTotal.setText(strnumtemp);
strnumtemp = "";
numtemp = 0;
strnum = "";
num = 0;
counter = 0;
}
if (e.getSource() == clear) {
txtTotal.setText("0");
strnumtemp = "";
numtemp = 0;
strnum = "";
num = 0;
counter = 0;
}
}
}
calculator.html
<html>
<body>
<applet code="calculator.class" width="300" height="300">
</applet>
</body>
</html>
OUTPUT:
Program 3:
AWTCounterApplet.java
import java.applet.Applet;
import java.awt.*;
import java.awt.event.*;
/** An AWT counter applet */
@SuppressWarnings("serial")
public class AWTCounterApplet extends Applet {
private TextField tfCount; // for displaying the counter value
private int count = 0; // counter's value
/** init() runs when the Applet is loaded */
@Override
public void init() {
setLayout(new FlowLayout(FlowLayout.CENTER, 10, 10));
setBackground(new Color(204, 238, 241)); // light blue
add(new Label("Counter: ")); // Label
tfCount = new TextField("0", 10); // TextField
tfCount.setEditable(false);
add(tfCount);
Button btnCount = new Button("Count"); // Button
add(btnCount);
// Handling the button-click
btnCount.addActionListener(new ActionListener() {
@Override
public void actionPerformed(ActionEvent e) {
++count;
tfCount.setText(count + "");
}
});
}
}
AWTAppletCounter.html
<html><head> <title>An AWT Applet</title></head><body>
<p>An AWT applet of counter: </p>
<applet code="AWTCounterApplet.class" width="300" height="300"
alt="Error Loading Applet!">
</applet>
</body>
</html>
OUTPUT
